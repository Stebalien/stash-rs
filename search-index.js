var searchIndex = {};
searchIndex["stash"] = {"doc":"Stash is a library for efficiently storing maps of keys to values when one\ndoesn&#39;t care what the keys are but wants blazing fast `O(1)` insertions,\ndeletions, and lookups.","items":[[3,"Stash","stash","An `O(1)` amortized table that reuses keys.",null,null],[3,"UniqueStash","","An `O(1)` amortized table that does not reuse keys.",null,null],[3,"Tag","","A versioned index into a `UniqueStash`.",null,null],[0,"stash","","",null,null],[3,"ExtendIndices","stash::stash","",null,null],[3,"Iter","","Iterator over the `(index, &amp;value)` pairs.",null,null],[3,"IterMut","","Iterator over the `(index, &amp;mut value)` pairs.",null,null],[3,"IntoIter","","Iterator over the `(index, value)` pairs.",null,null],[3,"Values","","Iterator over references to the values in the stash.",null,null],[3,"ValuesMut","","Iterator over mutable references to the values in the stash.",null,null],[3,"IntoValues","","Iterator over values in the stash.",null,null],[3,"Stash","","An `O(1)` amortized table that reuses keys.",null,null],[11,"drop","","",0,null],[11,"next","","",0,null],[11,"size_hint","","",0,null],[11,"next_back","","",0,null],[11,"next","","",1,null],[11,"count","","",1,null],[11,"last","","",1,null],[11,"size_hint","","",1,null],[11,"len","","",1,null],[11,"next_back","","",1,null],[11,"next","","",2,null],[11,"count","","",2,null],[11,"last","","",2,null],[11,"size_hint","","",2,null],[11,"len","","",2,null],[11,"next_back","","",2,null],[11,"next","","",3,null],[11,"count","","",3,null],[11,"last","","",3,null],[11,"size_hint","","",3,null],[11,"len","","",3,null],[11,"next_back","","",3,null],[11,"next","","",4,null],[11,"count","","",4,null],[11,"last","","",4,null],[11,"size_hint","","",4,null],[11,"len","","",4,null],[11,"next_back","","",4,null],[11,"next","","",5,null],[11,"count","","",5,null],[11,"last","","",5,null],[11,"size_hint","","",5,null],[11,"len","","",5,null],[11,"next_back","","",5,null],[11,"next","","",6,null],[11,"count","","",6,null],[11,"last","","",6,null],[11,"size_hint","","",6,null],[11,"len","","",6,null],[11,"next_back","","",6,null],[11,"clone","","",7,null],[11,"new","","Constructs a new, empty `Stash&lt;T&gt;`.",7,{"inputs":[],"output":{"name":"self"}}],[11,"with_capacity","","Constructs a new, empty `Stash&lt;T&gt;` with the specified capacity.",7,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"capacity","","Returns the number of elements the stash can hold without reallocating.",7,null],[11,"len","","The number of items in the stash.",7,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be put into\nthe given `Stash&lt;T&gt;`. The collection may reserve more space to avoid\nfrequent reallocations.",7,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe put into the given `Stash&lt;T&gt;`. Does nothing if the capacity is already\nsufficient.",7,null],[11,"put","","Put a value into the stash.",7,null],[11,"extend","","Put all items in the iterator into the stash.",7,null],[11,"iter","","Iterate over the items in this `Stash&lt;V&gt;`.",7,null],[11,"iter_mut","","Mutably iterate over the items in this `Stash&lt;V&gt;`.",7,null],[11,"values","","Iterate over the values in this `Stash&lt;V&gt;` by reference.",7,null],[11,"values_mut","","Mutably iterate over the values in this `Stash&lt;V&gt;` by reference.",7,null],[11,"into_values","","Iterate over the values in this `Stash&lt;V&gt;` by value.",7,null],[11,"is_empty","","Check if this `Stash&lt;V&gt;` is empty.",7,null],[11,"take","","Take an item from a slot (if non empty).",7,null],[11,"get","","Get a reference to the value at `index`.",7,null],[11,"get_mut","","Get a mutable reference to the value at `index`.",7,null],[11,"clear","","Clear the stash",7,null],[11,"into_iter","","",7,null],[11,"fmt","","",7,null],[11,"index","","",7,null],[11,"index_mut","","",7,null],[11,"default","","",7,{"inputs":[],"output":{"name":"self"}}],[0,"unique_stash","stash","",null,null],[3,"Tag","stash::unique_stash","A versioned index into a `UniqueStash`.",null,null],[3,"Extend","","The iterator produced by `Unique::extend`.",null,null],[3,"Iter","","Iterator over the `(index, &amp;value)` pairs.",null,null],[3,"IterMut","","Iterator over the `(index, &amp;mut value)` pairs.",null,null],[3,"IntoIter","","Iterator over the `(index, value)` pairs.",null,null],[3,"Values","","Iterator over references to the values in the stash.",null,null],[3,"ValuesMut","","Iterator over mutable references to the values in the stash.",null,null],[3,"IntoValues","","Iterator over values in the stash.",null,null],[3,"UniqueStash","","An `O(1)` amortized table that does not reuse keys.",null,null],[11,"hash","","",8,null],[11,"partial_cmp","","",8,null],[11,"lt","","",8,null],[11,"le","","",8,null],[11,"gt","","",8,null],[11,"ge","","",8,null],[11,"cmp","","",8,null],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"clone","","",8,null],[11,"fmt","","",8,null],[11,"fmt","","",8,null],[11,"drop","","",9,null],[11,"next","","",9,null],[11,"size_hint","","",9,null],[11,"next_back","","",9,null],[11,"next","","",10,null],[11,"count","","",10,null],[11,"last","","",10,null],[11,"size_hint","","",10,null],[11,"len","","",10,null],[11,"next_back","","",10,null],[11,"next","","",11,null],[11,"count","","",11,null],[11,"last","","",11,null],[11,"size_hint","","",11,null],[11,"len","","",11,null],[11,"next_back","","",11,null],[11,"next","","",12,null],[11,"count","","",12,null],[11,"last","","",12,null],[11,"size_hint","","",12,null],[11,"len","","",12,null],[11,"next_back","","",12,null],[11,"next","","",13,null],[11,"count","","",13,null],[11,"last","","",13,null],[11,"size_hint","","",13,null],[11,"len","","",13,null],[11,"next_back","","",13,null],[11,"next","","",14,null],[11,"count","","",14,null],[11,"last","","",14,null],[11,"size_hint","","",14,null],[11,"len","","",14,null],[11,"next_back","","",14,null],[11,"next","","",15,null],[11,"count","","",15,null],[11,"last","","",15,null],[11,"size_hint","","",15,null],[11,"len","","",15,null],[11,"next_back","","",15,null],[11,"clone","","",16,null],[11,"new","","Constructs a new, empty `UniqueStash&lt;T&gt;`.",16,{"inputs":[],"output":{"name":"self"}}],[11,"with_capacity","","Constructs a new, empty `UniqueStash&lt;T&gt;` with the specified capacity.",16,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"capacity","","Returns the number of elements the stash can hold without reallocating.",16,null],[11,"len","","The number of items in the stash.",16,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be put into\nthe given `UniqueStash&lt;T&gt;`. The collection may reserve more space to avoid\nfrequent reallocations.",16,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe put into the given `UniqueStash&lt;T&gt;`. Does nothing if the capacity is already\nsufficient.",16,null],[11,"put","","Put a value into the stash.",16,null],[11,"extend","","Put all items in the iterator into the stash.",16,null],[11,"iter","","Iterate over the items in this `UniqueStash&lt;V&gt;`.",16,null],[11,"iter_mut","","Mutably iterate over the items in this `UniqueStash&lt;V&gt;`.",16,null],[11,"values","","Iterate over the values in this `UniqueStash&lt;V&gt;` by reference.",16,null],[11,"values_mut","","Mutably iterate over the values in this `UniqueStash&lt;V&gt;` by reference.",16,null],[11,"into_values","","Iterate over the values in this `UniqueStash&lt;V&gt;` by value.",16,null],[11,"is_empty","","Check if this `UniqueStash&lt;V&gt;` is empty.",16,null],[11,"take","","Take an item from a slot (if non empty).",16,null],[11,"get","","Get a reference to the value at `index`.",16,null],[11,"get_mut","","Get a mutable reference to the value at `index`.",16,null],[11,"clear","","Clear the UniqueStash.",16,null],[11,"into_iter","","",16,null],[11,"fmt","","",16,null],[11,"index","","",16,null],[11,"index_mut","","",16,null],[11,"default","","",16,{"inputs":[],"output":{"name":"self"}}]],"paths":[[3,"ExtendIndices"],[3,"Values"],[3,"ValuesMut"],[3,"IntoValues"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Stash"],[3,"Tag"],[3,"Extend"],[3,"Values"],[3,"ValuesMut"],[3,"IntoValues"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"UniqueStash"]]};
initSearch(searchIndex);
